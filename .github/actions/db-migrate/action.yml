name: 'sqldef deploy'
description: 'DB migrate via sqldef'
inputs:
  AWS_ACCOUNT_ID:
    description: 'AWS account id'
    required: true
  ENVIRONMENT:
    description: 'ex. development, production'
    required: true
  ECSPRESSO_CONFIG_NAME:
    description: 'ex. service_webapp, oneshot_dry_db_migrate'
    required: true
  DB_MIGRATE_APPLY:
    description: 'If 1, apply, otherwise dry run'
    required: true
  GITHUB_TOKEN:
    description: 'GITHUB_TOKEN'
    required: true

runs:
  using: "composite"
  steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::${{ inputs.AWS_ACCOUNT_ID }}:role/github_actions
        aws-region: ap-northeast-1

    - name: ecspresso run
      uses: kayac/ecspresso@v2
      with:
        version: latest

    - shell: bash
      run: |
        echo 'body<<EOF' >> $GITHUB_OUTPUT
        ecspresso run --config .github/ecspresso/${{ inputs.ENVIRONMENT }}/${{ inputs.ECSPRESSO_CONFIG_NAME }}/ecspresso.yml --ext-str "DB_MIGRATE_APPLY=${{ inputs.DB_MIGRATE_APPLY }}" --ext-str "TAG=${{ github.sha }}" | sed -e 's%`%%g' >> $GITHUB_OUTPUT
        echo 'EOF' >> $GITHUB_OUTPUT
      id: db_migrate

    - name: Notify results
      uses: actions/github-script@v6
      with:
        github-token: ${{ inputs.GITHUB_TOKEN }}
        script: |
          const output = `${{ steps.db_migrate.outputs.body }}`;
          github.rest.issues.createComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number,
            body: output
          })
